# Agentic System - 服务配置文件

# 服务端口配置 (兼容Bash 3.2)
SERVICE_PORTS_gui="3000"
SERVICE_PORTS_rust_backend="8001"
SERVICE_PORTS_java_backend="8002"
SERVICE_PORTS_python_agent="8003"
SERVICE_PORTS_java_agent="8004"
SERVICE_PORTS_orchestration="8005"
SERVICE_PORTS_postgres="5432"
SERVICE_PORTS_redis="6379"

# 服务名称映射 (兼容Bash 3.2)
SERVICE_NAMES_gui="Svelte Frontend Application"
SERVICE_NAMES_rust_backend="Rust Backend Service"
SERVICE_NAMES_java_backend="Java Backend Service"
SERVICE_NAMES_python_agent="Python Agent Service"
SERVICE_NAMES_java_agent="Java Agent Service"
SERVICE_NAMES_orchestration="Java Orchestration Service"
SERVICE_NAMES_postgres="PostgreSQL Database"
SERVICE_NAMES_redis="Redis Cache"

# 服务健康检查端点 (兼容Bash 3.2)
HEALTH_ENDPOINTS_rust_backend="/health"
HEALTH_ENDPOINTS_java_backend="/health"
HEALTH_ENDPOINTS_python_agent="/health"
HEALTH_ENDPOINTS_java_agent="/actuator/health"
HEALTH_ENDPOINTS_orchestration="/actuator/health"

# 数据库健康检查端点 (兼容Bash 3.2)
DB_HEALTH_ENDPOINTS_rust_backend="/db-health"
DB_HEALTH_ENDPOINTS_java_backend="/db-health"
DB_HEALTH_ENDPOINTS_python_agent=""
DB_HEALTH_ENDPOINTS_java_agent=""
DB_HEALTH_ENDPOINTS_orchestration=""

# 核心服务列表（Docker容器）
CORE_SERVICES=(
    "postgres"
    "redis"
    "rust-backend"
    "java-backend"
    "python-agent"
    "java-agent"
    "orchestration"
)

# 前端服务配置
FRONTEND_SERVICE=(
    "name" "Svelte Frontend Application"
    "type" "local"
    "command" "npm run dev -- --host 0.0.0.0 --port 3000"
    "working_dir" "src/client/desktop"
    "dependencies" "node_modules"
    "install_command" "npm install"
)

# 服务启动顺序
SERVICE_START_ORDER=(
    "postgres"
    "redis"
    "rust-backend"
    "java-backend"
    "python-agent"
    "java-agent"
    "orchestration"
)

# 服务启动超时时间（秒）
SERVICE_START_TIMEOUT=30

# 服务检查间隔（秒）
SERVICE_CHECK_INTERVAL=2

# 日志配置
LOG_CONFIG=(
    "frontend_log" "logs/frontend.log"
    "frontend_pid" "logs/frontend.pid"
    "docker_logs" "logs/docker.log"
)
